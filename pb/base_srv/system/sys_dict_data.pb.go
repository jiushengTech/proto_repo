// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: base_srv/system/sys_dict_data.proto

package system

import (
	page "github.com/samsaralc/proto_repo/pb/common/page"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSysDictDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictSort  int32  `protobuf:"varint,1,opt,name=dictSort,proto3" json:"dictSort,omitempty"`
	DictLabel string `protobuf:"bytes,2,opt,name=dictLabel,proto3" json:"dictLabel,omitempty"`
	DictValue string `protobuf:"bytes,3,opt,name=dictValue,proto3" json:"dictValue,omitempty"`
	DictType  string `protobuf:"bytes,4,opt,name=dictType,proto3" json:"dictType,omitempty"`
	CssClass  string `protobuf:"bytes,5,opt,name=cssClass,proto3" json:"cssClass,omitempty"`
	ListClass string `protobuf:"bytes,6,opt,name=listClass,proto3" json:"listClass,omitempty"`
	IsDefault string `protobuf:"bytes,7,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
	Status    int32  `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	Default   string `protobuf:"bytes,9,opt,name=default,proto3" json:"default,omitempty"`
	Remark    string `protobuf:"bytes,10,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *CreateSysDictDataRequest) Reset() {
	*x = CreateSysDictDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_srv_system_sys_dict_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSysDictDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSysDictDataRequest) ProtoMessage() {}

func (x *CreateSysDictDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_base_srv_system_sys_dict_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSysDictDataRequest.ProtoReflect.Descriptor instead.
func (*CreateSysDictDataRequest) Descriptor() ([]byte, []int) {
	return file_base_srv_system_sys_dict_data_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSysDictDataRequest) GetDictSort() int32 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *CreateSysDictDataRequest) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *CreateSysDictDataRequest) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *CreateSysDictDataRequest) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *CreateSysDictDataRequest) GetCssClass() string {
	if x != nil {
		return x.CssClass
	}
	return ""
}

func (x *CreateSysDictDataRequest) GetListClass() string {
	if x != nil {
		return x.ListClass
	}
	return ""
}

func (x *CreateSysDictDataRequest) GetIsDefault() string {
	if x != nil {
		return x.IsDefault
	}
	return ""
}

func (x *CreateSysDictDataRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateSysDictDataRequest) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

func (x *CreateSysDictDataRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type CreateSysDictDataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateSysDictDataReply) Reset() {
	*x = CreateSysDictDataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_srv_system_sys_dict_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSysDictDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSysDictDataReply) ProtoMessage() {}

func (x *CreateSysDictDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_base_srv_system_sys_dict_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSysDictDataReply.ProtoReflect.Descriptor instead.
func (*CreateSysDictDataReply) Descriptor() ([]byte, []int) {
	return file_base_srv_system_sys_dict_data_proto_rawDescGZIP(), []int{1}
}

type UpdateSysDictDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictSort  int32  `protobuf:"varint,1,opt,name=dictSort,proto3" json:"dictSort,omitempty"`
	DictLabel string `protobuf:"bytes,2,opt,name=dictLabel,proto3" json:"dictLabel,omitempty"`
	DictValue string `protobuf:"bytes,3,opt,name=dictValue,proto3" json:"dictValue,omitempty"`
	DictType  string `protobuf:"bytes,4,opt,name=dictType,proto3" json:"dictType,omitempty"`
	CssClass  string `protobuf:"bytes,5,opt,name=cssClass,proto3" json:"cssClass,omitempty"`
	ListClass string `protobuf:"bytes,6,opt,name=listClass,proto3" json:"listClass,omitempty"`
	IsDefault string `protobuf:"bytes,7,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
	Status    int32  `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	Default   string `protobuf:"bytes,9,opt,name=default,proto3" json:"default,omitempty"`
	Remark    string `protobuf:"bytes,10,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *UpdateSysDictDataRequest) Reset() {
	*x = UpdateSysDictDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_srv_system_sys_dict_data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSysDictDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysDictDataRequest) ProtoMessage() {}

func (x *UpdateSysDictDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_base_srv_system_sys_dict_data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysDictDataRequest.ProtoReflect.Descriptor instead.
func (*UpdateSysDictDataRequest) Descriptor() ([]byte, []int) {
	return file_base_srv_system_sys_dict_data_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateSysDictDataRequest) GetDictSort() int32 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *UpdateSysDictDataRequest) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *UpdateSysDictDataRequest) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *UpdateSysDictDataRequest) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *UpdateSysDictDataRequest) GetCssClass() string {
	if x != nil {
		return x.CssClass
	}
	return ""
}

func (x *UpdateSysDictDataRequest) GetListClass() string {
	if x != nil {
		return x.ListClass
	}
	return ""
}

func (x *UpdateSysDictDataRequest) GetIsDefault() string {
	if x != nil {
		return x.IsDefault
	}
	return ""
}

func (x *UpdateSysDictDataRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateSysDictDataRequest) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

func (x *UpdateSysDictDataRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type UpdateSysDictDataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSysDictDataReply) Reset() {
	*x = UpdateSysDictDataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_srv_system_sys_dict_data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSysDictDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysDictDataReply) ProtoMessage() {}

func (x *UpdateSysDictDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_base_srv_system_sys_dict_data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysDictDataReply.ProtoReflect.Descriptor instead.
func (*UpdateSysDictDataReply) Descriptor() ([]byte, []int) {
	return file_base_srv_system_sys_dict_data_proto_rawDescGZIP(), []int{3}
}

type DeleteSysDictDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictCode uint32 `protobuf:"varint,1,opt,name=dictCode,proto3" json:"dictCode,omitempty"`
}

func (x *DeleteSysDictDataRequest) Reset() {
	*x = DeleteSysDictDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_srv_system_sys_dict_data_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSysDictDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSysDictDataRequest) ProtoMessage() {}

func (x *DeleteSysDictDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_base_srv_system_sys_dict_data_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSysDictDataRequest.ProtoReflect.Descriptor instead.
func (*DeleteSysDictDataRequest) Descriptor() ([]byte, []int) {
	return file_base_srv_system_sys_dict_data_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteSysDictDataRequest) GetDictCode() uint32 {
	if x != nil {
		return x.DictCode
	}
	return 0
}

type DeleteSysDictDataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSysDictDataReply) Reset() {
	*x = DeleteSysDictDataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_srv_system_sys_dict_data_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSysDictDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSysDictDataReply) ProtoMessage() {}

func (x *DeleteSysDictDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_base_srv_system_sys_dict_data_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSysDictDataReply.ProtoReflect.Descriptor instead.
func (*DeleteSysDictDataReply) Descriptor() ([]byte, []int) {
	return file_base_srv_system_sys_dict_data_proto_rawDescGZIP(), []int{5}
}

type GetSysDictDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictCode uint32 `protobuf:"varint,1,opt,name=dictCode,proto3" json:"dictCode,omitempty"`
}

func (x *GetSysDictDataRequest) Reset() {
	*x = GetSysDictDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_srv_system_sys_dict_data_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysDictDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysDictDataRequest) ProtoMessage() {}

func (x *GetSysDictDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_base_srv_system_sys_dict_data_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysDictDataRequest.ProtoReflect.Descriptor instead.
func (*GetSysDictDataRequest) Descriptor() ([]byte, []int) {
	return file_base_srv_system_sys_dict_data_proto_rawDescGZIP(), []int{6}
}

func (x *GetSysDictDataRequest) GetDictCode() uint32 {
	if x != nil {
		return x.DictCode
	}
	return 0
}

type GetSysDictDataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictCode  int32  `protobuf:"varint,1,opt,name=dictCode,proto3" json:"dictCode,omitempty"`
	DictSort  int32  `protobuf:"varint,2,opt,name=dictSort,proto3" json:"dictSort,omitempty"`
	DictLabel string `protobuf:"bytes,3,opt,name=dictLabel,proto3" json:"dictLabel,omitempty"`
	DictValue string `protobuf:"bytes,4,opt,name=dictValue,proto3" json:"dictValue,omitempty"`
	DictType  string `protobuf:"bytes,5,opt,name=dictType,proto3" json:"dictType,omitempty"`
	CssClass  string `protobuf:"bytes,6,opt,name=cssClass,proto3" json:"cssClass,omitempty"`
	ListClass string `protobuf:"bytes,7,opt,name=listClass,proto3" json:"listClass,omitempty"`
	IsDefault string `protobuf:"bytes,8,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
	Status    int32  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	Default   string `protobuf:"bytes,10,opt,name=default,proto3" json:"default,omitempty"`
	Remark    string `protobuf:"bytes,11,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *GetSysDictDataReply) Reset() {
	*x = GetSysDictDataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_srv_system_sys_dict_data_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysDictDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysDictDataReply) ProtoMessage() {}

func (x *GetSysDictDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_base_srv_system_sys_dict_data_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysDictDataReply.ProtoReflect.Descriptor instead.
func (*GetSysDictDataReply) Descriptor() ([]byte, []int) {
	return file_base_srv_system_sys_dict_data_proto_rawDescGZIP(), []int{7}
}

func (x *GetSysDictDataReply) GetDictCode() int32 {
	if x != nil {
		return x.DictCode
	}
	return 0
}

func (x *GetSysDictDataReply) GetDictSort() int32 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *GetSysDictDataReply) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *GetSysDictDataReply) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *GetSysDictDataReply) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *GetSysDictDataReply) GetCssClass() string {
	if x != nil {
		return x.CssClass
	}
	return ""
}

func (x *GetSysDictDataReply) GetListClass() string {
	if x != nil {
		return x.ListClass
	}
	return ""
}

func (x *GetSysDictDataReply) GetIsDefault() string {
	if x != nil {
		return x.IsDefault
	}
	return ""
}

func (x *GetSysDictDataReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetSysDictDataReply) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

func (x *GetSysDictDataReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type ListSysDictDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictCode  int32           `protobuf:"varint,1,opt,name=dictCode,proto3" json:"dictCode,omitempty"`
	DictLabel string          `protobuf:"bytes,2,opt,name=dictLabel,proto3" json:"dictLabel,omitempty"`
	DictValue string          `protobuf:"bytes,3,opt,name=dictValue,proto3" json:"dictValue,omitempty"`
	DictType  string          `protobuf:"bytes,4,opt,name=dictType,proto3" json:"dictType,omitempty"`
	Status    int32           `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	PageQuery *page.PageQuery `protobuf:"bytes,6,opt,name=pageQuery,proto3" json:"pageQuery,omitempty"`
}

func (x *ListSysDictDataRequest) Reset() {
	*x = ListSysDictDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_srv_system_sys_dict_data_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSysDictDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSysDictDataRequest) ProtoMessage() {}

func (x *ListSysDictDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_base_srv_system_sys_dict_data_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSysDictDataRequest.ProtoReflect.Descriptor instead.
func (*ListSysDictDataRequest) Descriptor() ([]byte, []int) {
	return file_base_srv_system_sys_dict_data_proto_rawDescGZIP(), []int{8}
}

func (x *ListSysDictDataRequest) GetDictCode() int32 {
	if x != nil {
		return x.DictCode
	}
	return 0
}

func (x *ListSysDictDataRequest) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *ListSysDictDataRequest) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *ListSysDictDataRequest) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *ListSysDictDataRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ListSysDictDataRequest) GetPageQuery() *page.PageQuery {
	if x != nil {
		return x.PageQuery
	}
	return nil
}

type ListSysDictDataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageInfo *page.PageInfo         `protobuf:"bytes,1,opt,name=pageInfo,proto3" json:"pageInfo,omitempty"`
	List     []*GetSysDictDataReply `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListSysDictDataReply) Reset() {
	*x = ListSysDictDataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_srv_system_sys_dict_data_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSysDictDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSysDictDataReply) ProtoMessage() {}

func (x *ListSysDictDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_base_srv_system_sys_dict_data_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSysDictDataReply.ProtoReflect.Descriptor instead.
func (*ListSysDictDataReply) Descriptor() ([]byte, []int) {
	return file_base_srv_system_sys_dict_data_proto_rawDescGZIP(), []int{9}
}

func (x *ListSysDictDataReply) GetPageInfo() *page.PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

func (x *ListSysDictDataReply) GetList() []*GetSysDictDataReply {
	if x != nil {
		return x.List
	}
	return nil
}

var File_base_srv_system_sys_dict_data_proto protoreflect.FileDescriptor

var file_base_srv_system_sys_dict_data_proto_rawDesc = []byte{
	0x0a, 0x23, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x72, 0x76, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x62, 0x69, 0x7a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x73, 0x72, 0x76, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x70, 0x61, 0x67, 0x65, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xb0, 0x02, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69,
	0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63,
	0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69,
	0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x22, 0x18, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73,
	0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xb0, 0x02,
	0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69,
	0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69,
	0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69,
	0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c,
	0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x22, 0x18, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x36, 0x0a, 0x18, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44,
	0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x33, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0xc7, 0x02, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x63,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x73, 0x73,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x73, 0x73,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xd3, 0x01, 0x0a, 0x16,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x22, 0x80, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x61, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x73, 0x72, 0x76, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x32, 0xf9, 0x05, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x93, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x2e, 0x62, 0x69, 0x7a,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x62, 0x69, 0x7a, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01,
	0x2a, 0x22, 0x17, 0x79, 0x77, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x73, 0x79, 0x73,
	0x5f, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x93, 0x01, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x2d, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x72, 0x76, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73,
	0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44,
	0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x1a, 0x17, 0x79, 0x77, 0x2f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x9b, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69,
	0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x2a, 0x22, 0x79, 0x77, 0x2f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x2f, 0x7b, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x7d, 0x12, 0x92,
	0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x2a, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x72, 0x76,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x44, 0x69,
	0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x62, 0x69, 0x7a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12,
	0x22, 0x79, 0x77, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x64,
	0x69, 0x63, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x7b, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x7d, 0x12, 0x8a, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x44,
	0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x73, 0x72, 0x76, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x79, 0x77, 0x2f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x61, 0x6d, 0x73, 0x61, 0x72, 0x61, 0x6c, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x2f, 0x70, 0x62, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x72, 0x76, 0x2f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x3b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_base_srv_system_sys_dict_data_proto_rawDescOnce sync.Once
	file_base_srv_system_sys_dict_data_proto_rawDescData = file_base_srv_system_sys_dict_data_proto_rawDesc
)

func file_base_srv_system_sys_dict_data_proto_rawDescGZIP() []byte {
	file_base_srv_system_sys_dict_data_proto_rawDescOnce.Do(func() {
		file_base_srv_system_sys_dict_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_base_srv_system_sys_dict_data_proto_rawDescData)
	})
	return file_base_srv_system_sys_dict_data_proto_rawDescData
}

var file_base_srv_system_sys_dict_data_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_base_srv_system_sys_dict_data_proto_goTypes = []interface{}{
	(*CreateSysDictDataRequest)(nil), // 0: biz.base_srv.system.CreateSysDictDataRequest
	(*CreateSysDictDataReply)(nil),   // 1: biz.base_srv.system.CreateSysDictDataReply
	(*UpdateSysDictDataRequest)(nil), // 2: biz.base_srv.system.UpdateSysDictDataRequest
	(*UpdateSysDictDataReply)(nil),   // 3: biz.base_srv.system.UpdateSysDictDataReply
	(*DeleteSysDictDataRequest)(nil), // 4: biz.base_srv.system.DeleteSysDictDataRequest
	(*DeleteSysDictDataReply)(nil),   // 5: biz.base_srv.system.DeleteSysDictDataReply
	(*GetSysDictDataRequest)(nil),    // 6: biz.base_srv.system.GetSysDictDataRequest
	(*GetSysDictDataReply)(nil),      // 7: biz.base_srv.system.GetSysDictDataReply
	(*ListSysDictDataRequest)(nil),   // 8: biz.base_srv.system.ListSysDictDataRequest
	(*ListSysDictDataReply)(nil),     // 9: biz.base_srv.system.ListSysDictDataReply
	(*page.PageQuery)(nil),           // 10: page.PageQuery
	(*page.PageInfo)(nil),            // 11: page.PageInfo
}
var file_base_srv_system_sys_dict_data_proto_depIdxs = []int32{
	10, // 0: biz.base_srv.system.ListSysDictDataRequest.pageQuery:type_name -> page.PageQuery
	11, // 1: biz.base_srv.system.ListSysDictDataReply.pageInfo:type_name -> page.PageInfo
	7,  // 2: biz.base_srv.system.ListSysDictDataReply.list:type_name -> biz.base_srv.system.GetSysDictDataReply
	0,  // 3: biz.base_srv.system.SysDictData.CreateSysDictData:input_type -> biz.base_srv.system.CreateSysDictDataRequest
	2,  // 4: biz.base_srv.system.SysDictData.UpdateSysDictData:input_type -> biz.base_srv.system.UpdateSysDictDataRequest
	4,  // 5: biz.base_srv.system.SysDictData.DeleteSysDictData:input_type -> biz.base_srv.system.DeleteSysDictDataRequest
	6,  // 6: biz.base_srv.system.SysDictData.GetSysDictData:input_type -> biz.base_srv.system.GetSysDictDataRequest
	8,  // 7: biz.base_srv.system.SysDictData.ListSysDictData:input_type -> biz.base_srv.system.ListSysDictDataRequest
	1,  // 8: biz.base_srv.system.SysDictData.CreateSysDictData:output_type -> biz.base_srv.system.CreateSysDictDataReply
	3,  // 9: biz.base_srv.system.SysDictData.UpdateSysDictData:output_type -> biz.base_srv.system.UpdateSysDictDataReply
	5,  // 10: biz.base_srv.system.SysDictData.DeleteSysDictData:output_type -> biz.base_srv.system.DeleteSysDictDataReply
	7,  // 11: biz.base_srv.system.SysDictData.GetSysDictData:output_type -> biz.base_srv.system.GetSysDictDataReply
	9,  // 12: biz.base_srv.system.SysDictData.ListSysDictData:output_type -> biz.base_srv.system.ListSysDictDataReply
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_base_srv_system_sys_dict_data_proto_init() }
func file_base_srv_system_sys_dict_data_proto_init() {
	if File_base_srv_system_sys_dict_data_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_base_srv_system_sys_dict_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSysDictDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_srv_system_sys_dict_data_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSysDictDataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_srv_system_sys_dict_data_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSysDictDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_srv_system_sys_dict_data_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSysDictDataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_srv_system_sys_dict_data_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSysDictDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_srv_system_sys_dict_data_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSysDictDataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_srv_system_sys_dict_data_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSysDictDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_srv_system_sys_dict_data_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSysDictDataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_srv_system_sys_dict_data_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSysDictDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_srv_system_sys_dict_data_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSysDictDataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_base_srv_system_sys_dict_data_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_base_srv_system_sys_dict_data_proto_goTypes,
		DependencyIndexes: file_base_srv_system_sys_dict_data_proto_depIdxs,
		MessageInfos:      file_base_srv_system_sys_dict_data_proto_msgTypes,
	}.Build()
	File_base_srv_system_sys_dict_data_proto = out.File
	file_base_srv_system_sys_dict_data_proto_rawDesc = nil
	file_base_srv_system_sys_dict_data_proto_goTypes = nil
	file_base_srv_system_sys_dict_data_proto_depIdxs = nil
}
