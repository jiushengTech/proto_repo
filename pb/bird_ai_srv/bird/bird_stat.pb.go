// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: bird_ai_srv/bird/bird_stat.proto

package bird

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	page "proto_repo/pb/common/page"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListBirdStatFromVoicePrintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   *page.PageQuery `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	BirdId uint32          `protobuf:"varint,2,opt,name=bird_id,json=birdId,proto3" json:"bird_id,omitempty"`
}

func (x *ListBirdStatFromVoicePrintRequest) Reset() {
	*x = ListBirdStatFromVoicePrintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_ai_srv_bird_bird_stat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBirdStatFromVoicePrintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBirdStatFromVoicePrintRequest) ProtoMessage() {}

func (x *ListBirdStatFromVoicePrintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bird_ai_srv_bird_bird_stat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBirdStatFromVoicePrintRequest.ProtoReflect.Descriptor instead.
func (*ListBirdStatFromVoicePrintRequest) Descriptor() ([]byte, []int) {
	return file_bird_ai_srv_bird_bird_stat_proto_rawDescGZIP(), []int{0}
}

func (x *ListBirdStatFromVoicePrintRequest) GetPage() *page.PageQuery {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListBirdStatFromVoicePrintRequest) GetBirdId() uint32 {
	if x != nil {
		return x.BirdId
	}
	return 0
}

type ListBirdStatFromVoicePrintReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageInfo *page.PageInfo                              `protobuf:"bytes,1,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	List     []*ListBirdStatFromVoicePrintReply_BirdStat `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListBirdStatFromVoicePrintReply) Reset() {
	*x = ListBirdStatFromVoicePrintReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_ai_srv_bird_bird_stat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBirdStatFromVoicePrintReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBirdStatFromVoicePrintReply) ProtoMessage() {}

func (x *ListBirdStatFromVoicePrintReply) ProtoReflect() protoreflect.Message {
	mi := &file_bird_ai_srv_bird_bird_stat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBirdStatFromVoicePrintReply.ProtoReflect.Descriptor instead.
func (*ListBirdStatFromVoicePrintReply) Descriptor() ([]byte, []int) {
	return file_bird_ai_srv_bird_bird_stat_proto_rawDescGZIP(), []int{1}
}

func (x *ListBirdStatFromVoicePrintReply) GetPageInfo() *page.PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

func (x *ListBirdStatFromVoicePrintReply) GetList() []*ListBirdStatFromVoicePrintReply_BirdStat {
	if x != nil {
		return x.List
	}
	return nil
}

type ListBirdStatFromCameraRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   *page.PageQuery `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	BirdId uint32          `protobuf:"varint,2,opt,name=bird_id,json=birdId,proto3" json:"bird_id,omitempty"`
}

func (x *ListBirdStatFromCameraRequest) Reset() {
	*x = ListBirdStatFromCameraRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_ai_srv_bird_bird_stat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBirdStatFromCameraRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBirdStatFromCameraRequest) ProtoMessage() {}

func (x *ListBirdStatFromCameraRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bird_ai_srv_bird_bird_stat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBirdStatFromCameraRequest.ProtoReflect.Descriptor instead.
func (*ListBirdStatFromCameraRequest) Descriptor() ([]byte, []int) {
	return file_bird_ai_srv_bird_bird_stat_proto_rawDescGZIP(), []int{2}
}

func (x *ListBirdStatFromCameraRequest) GetPage() *page.PageQuery {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListBirdStatFromCameraRequest) GetBirdId() uint32 {
	if x != nil {
		return x.BirdId
	}
	return 0
}

type ListBirdStatFromCameraReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageInfo *page.PageInfo                          `protobuf:"bytes,1,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	List     []*ListBirdStatFromCameraReply_BirdStat `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListBirdStatFromCameraReply) Reset() {
	*x = ListBirdStatFromCameraReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_ai_srv_bird_bird_stat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBirdStatFromCameraReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBirdStatFromCameraReply) ProtoMessage() {}

func (x *ListBirdStatFromCameraReply) ProtoReflect() protoreflect.Message {
	mi := &file_bird_ai_srv_bird_bird_stat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBirdStatFromCameraReply.ProtoReflect.Descriptor instead.
func (*ListBirdStatFromCameraReply) Descriptor() ([]byte, []int) {
	return file_bird_ai_srv_bird_bird_stat_proto_rawDescGZIP(), []int{3}
}

func (x *ListBirdStatFromCameraReply) GetPageInfo() *page.PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

func (x *ListBirdStatFromCameraReply) GetList() []*ListBirdStatFromCameraReply_BirdStat {
	if x != nil {
		return x.List
	}
	return nil
}

type DeleteBirdStatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteBirdStatRequest) Reset() {
	*x = DeleteBirdStatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_ai_srv_bird_bird_stat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBirdStatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBirdStatRequest) ProtoMessage() {}

func (x *DeleteBirdStatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bird_ai_srv_bird_bird_stat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBirdStatRequest.ProtoReflect.Descriptor instead.
func (*DeleteBirdStatRequest) Descriptor() ([]byte, []int) {
	return file_bird_ai_srv_bird_bird_stat_proto_rawDescGZIP(), []int{4}
}

type DeleteBirdStatReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteBirdStatReply) Reset() {
	*x = DeleteBirdStatReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_ai_srv_bird_bird_stat_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBirdStatReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBirdStatReply) ProtoMessage() {}

func (x *DeleteBirdStatReply) ProtoReflect() protoreflect.Message {
	mi := &file_bird_ai_srv_bird_bird_stat_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBirdStatReply.ProtoReflect.Descriptor instead.
func (*DeleteBirdStatReply) Descriptor() ([]byte, []int) {
	return file_bird_ai_srv_bird_bird_stat_proto_rawDescGZIP(), []int{5}
}

type ListBirdStatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListBirdStatRequest) Reset() {
	*x = ListBirdStatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_ai_srv_bird_bird_stat_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBirdStatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBirdStatRequest) ProtoMessage() {}

func (x *ListBirdStatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bird_ai_srv_bird_bird_stat_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBirdStatRequest.ProtoReflect.Descriptor instead.
func (*ListBirdStatRequest) Descriptor() ([]byte, []int) {
	return file_bird_ai_srv_bird_bird_stat_proto_rawDescGZIP(), []int{6}
}

type ListBirdStatReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListBirdStatReply) Reset() {
	*x = ListBirdStatReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_ai_srv_bird_bird_stat_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBirdStatReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBirdStatReply) ProtoMessage() {}

func (x *ListBirdStatReply) ProtoReflect() protoreflect.Message {
	mi := &file_bird_ai_srv_bird_bird_stat_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBirdStatReply.ProtoReflect.Descriptor instead.
func (*ListBirdStatReply) Descriptor() ([]byte, []int) {
	return file_bird_ai_srv_bird_bird_stat_proto_rawDescGZIP(), []int{7}
}

type ListBirdStatFromVoicePrintReply_BirdStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DeviceId       string `protobuf:"bytes,7,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	BirdId         int32  `protobuf:"varint,8,opt,name=bird_id,json=birdId,proto3" json:"bird_id,omitempty"`
	BirdSimilarity int32  `protobuf:"varint,9,opt,name=bird_similarity,json=birdSimilarity,proto3" json:"bird_similarity,omitempty"`
	Source         string `protobuf:"bytes,11,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *ListBirdStatFromVoicePrintReply_BirdStat) Reset() {
	*x = ListBirdStatFromVoicePrintReply_BirdStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_ai_srv_bird_bird_stat_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBirdStatFromVoicePrintReply_BirdStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBirdStatFromVoicePrintReply_BirdStat) ProtoMessage() {}

func (x *ListBirdStatFromVoicePrintReply_BirdStat) ProtoReflect() protoreflect.Message {
	mi := &file_bird_ai_srv_bird_bird_stat_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBirdStatFromVoicePrintReply_BirdStat.ProtoReflect.Descriptor instead.
func (*ListBirdStatFromVoicePrintReply_BirdStat) Descriptor() ([]byte, []int) {
	return file_bird_ai_srv_bird_bird_stat_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ListBirdStatFromVoicePrintReply_BirdStat) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListBirdStatFromVoicePrintReply_BirdStat) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ListBirdStatFromVoicePrintReply_BirdStat) GetBirdId() int32 {
	if x != nil {
		return x.BirdId
	}
	return 0
}

func (x *ListBirdStatFromVoicePrintReply_BirdStat) GetBirdSimilarity() int32 {
	if x != nil {
		return x.BirdSimilarity
	}
	return 0
}

func (x *ListBirdStatFromVoicePrintReply_BirdStat) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type ListBirdStatFromCameraReply_BirdStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CameraId       string `protobuf:"bytes,7,opt,name=camera_id,json=cameraId,proto3" json:"camera_id,omitempty"`
	BirdId         int32  `protobuf:"varint,8,opt,name=bird_id,json=birdId,proto3" json:"bird_id,omitempty"`
	BirdSimilarity int32  `protobuf:"varint,9,opt,name=bird_similarity,json=birdSimilarity,proto3" json:"bird_similarity,omitempty"`
	Result         string `protobuf:"bytes,11,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ListBirdStatFromCameraReply_BirdStat) Reset() {
	*x = ListBirdStatFromCameraReply_BirdStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_ai_srv_bird_bird_stat_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBirdStatFromCameraReply_BirdStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBirdStatFromCameraReply_BirdStat) ProtoMessage() {}

func (x *ListBirdStatFromCameraReply_BirdStat) ProtoReflect() protoreflect.Message {
	mi := &file_bird_ai_srv_bird_bird_stat_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBirdStatFromCameraReply_BirdStat.ProtoReflect.Descriptor instead.
func (*ListBirdStatFromCameraReply_BirdStat) Descriptor() ([]byte, []int) {
	return file_bird_ai_srv_bird_bird_stat_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ListBirdStatFromCameraReply_BirdStat) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListBirdStatFromCameraReply_BirdStat) GetCameraId() string {
	if x != nil {
		return x.CameraId
	}
	return ""
}

func (x *ListBirdStatFromCameraReply_BirdStat) GetBirdId() int32 {
	if x != nil {
		return x.BirdId
	}
	return 0
}

func (x *ListBirdStatFromCameraReply_BirdStat) GetBirdSimilarity() int32 {
	if x != nil {
		return x.BirdSimilarity
	}
	return 0
}

func (x *ListBirdStatFromCameraReply_BirdStat) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

var File_bird_ai_srv_bird_bird_stat_proto protoreflect.FileDescriptor

var file_bird_ai_srv_bird_bird_stat_proto_rawDesc = []byte{
	0x0a, 0x20, 0x62, 0x69, 0x72, 0x64, 0x5f, 0x61, 0x69, 0x5f, 0x73, 0x72, 0x76, 0x2f, 0x62, 0x69,
	0x72, 0x64, 0x2f, 0x62, 0x69, 0x72, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x14, 0x62, 0x69, 0x7a, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x5f, 0x61, 0x69, 0x5f,
	0x73, 0x72, 0x76, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x1a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x70, 0x61, 0x67, 0x65, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x61,
	0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x69, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x46, 0x72,
	0x6f, 0x6d, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x69, 0x72, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x69, 0x72, 0x64, 0x49,
	0x64, 0x22, 0xb6, 0x02, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x69, 0x72, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x52, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3e, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x5f, 0x61, 0x69, 0x5f, 0x73,
	0x72, 0x76, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x69, 0x72, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x72, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x42, 0x69, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x91, 0x01, 0x0a, 0x08, 0x42, 0x69, 0x72, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x62, 0x69, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x62, 0x69, 0x72, 0x64, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x69, 0x72,
	0x64, 0x5f, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x62, 0x69, 0x72, 0x64, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x5d, 0x0a, 0x1d, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x69, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x61, 0x67, 0x65,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x62, 0x69, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x62, 0x69, 0x72, 0x64, 0x49, 0x64, 0x22, 0xae, 0x02, 0x0a, 0x1b, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x69, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x61, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x5f,
	0x61, 0x69, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x69, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x42, 0x69, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x91, 0x01, 0x0a, 0x08, 0x42, 0x69, 0x72, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x62, 0x69, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x62, 0x69, 0x72, 0x64, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x69, 0x72,
	0x64, 0x5f, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x62, 0x69, 0x72, 0x64, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x42, 0x69, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x69, 0x72,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x69, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x13, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x69, 0x72, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0xc6, 0x03, 0x0a, 0x08, 0x42, 0x69, 0x72, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x12, 0x68, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x69, 0x72,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x12, 0x2b, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x62, 0x69, 0x72, 0x64,
	0x5f, 0x61, 0x69, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x69, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x5f, 0x61, 0x69,
	0x5f, 0x73, 0x72, 0x76, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x69, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x9e, 0x01,
	0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x69, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x46, 0x72,
	0x6f, 0x6d, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x12, 0x33, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x62,
	0x69, 0x72, 0x64, 0x5f, 0x61, 0x69, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x69, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x46, 0x72, 0x6f, 0x6d,
	0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e,
	0x62, 0x69, 0x7a, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x5f, 0x61, 0x69, 0x5f, 0x73, 0x72, 0x76, 0x2e,
	0x62, 0x69, 0x72, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x69, 0x72, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x79, 0x77, 0x2f, 0x62, 0x69,
	0x72, 0x64, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x2f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x12, 0xae,
	0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x69, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x46,
	0x72, 0x6f, 0x6d, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x37, 0x2e,
	0x62, 0x69, 0x7a, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x5f, 0x61, 0x69, 0x5f, 0x73, 0x72, 0x76, 0x2e,
	0x62, 0x69, 0x72, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x69, 0x72, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x46, 0x72, 0x6f, 0x6d, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x62, 0x69, 0x7a, 0x2e, 0x62, 0x69, 0x72,
	0x64, 0x5f, 0x61, 0x69, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x69, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x56, 0x6f,
	0x69, 0x63, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x79, 0x77, 0x2f, 0x62, 0x69, 0x72, 0x64, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x2f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x42,
	0x40, 0x0a, 0x18, 0x62, 0x69, 0x72, 0x64, 0x2d, 0x61, 0x69, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x50, 0x01, 0x5a, 0x22, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6f, 0x2f, 0x70, 0x62, 0x2f, 0x62, 0x69, 0x72, 0x64,
	0x5f, 0x61, 0x69, 0x5f, 0x73, 0x72, 0x76, 0x2f, 0x62, 0x69, 0x72, 0x64, 0x3b, 0x62, 0x69, 0x72,
	0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bird_ai_srv_bird_bird_stat_proto_rawDescOnce sync.Once
	file_bird_ai_srv_bird_bird_stat_proto_rawDescData = file_bird_ai_srv_bird_bird_stat_proto_rawDesc
)

func file_bird_ai_srv_bird_bird_stat_proto_rawDescGZIP() []byte {
	file_bird_ai_srv_bird_bird_stat_proto_rawDescOnce.Do(func() {
		file_bird_ai_srv_bird_bird_stat_proto_rawDescData = protoimpl.X.CompressGZIP(file_bird_ai_srv_bird_bird_stat_proto_rawDescData)
	})
	return file_bird_ai_srv_bird_bird_stat_proto_rawDescData
}

var file_bird_ai_srv_bird_bird_stat_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_bird_ai_srv_bird_bird_stat_proto_goTypes = []interface{}{
	(*ListBirdStatFromVoicePrintRequest)(nil),        // 0: biz.bird_ai_srv.bird.ListBirdStatFromVoicePrintRequest
	(*ListBirdStatFromVoicePrintReply)(nil),          // 1: biz.bird_ai_srv.bird.ListBirdStatFromVoicePrintReply
	(*ListBirdStatFromCameraRequest)(nil),            // 2: biz.bird_ai_srv.bird.ListBirdStatFromCameraRequest
	(*ListBirdStatFromCameraReply)(nil),              // 3: biz.bird_ai_srv.bird.ListBirdStatFromCameraReply
	(*DeleteBirdStatRequest)(nil),                    // 4: biz.bird_ai_srv.bird.DeleteBirdStatRequest
	(*DeleteBirdStatReply)(nil),                      // 5: biz.bird_ai_srv.bird.DeleteBirdStatReply
	(*ListBirdStatRequest)(nil),                      // 6: biz.bird_ai_srv.bird.ListBirdStatRequest
	(*ListBirdStatReply)(nil),                        // 7: biz.bird_ai_srv.bird.ListBirdStatReply
	(*ListBirdStatFromVoicePrintReply_BirdStat)(nil), // 8: biz.bird_ai_srv.bird.ListBirdStatFromVoicePrintReply.BirdStat
	(*ListBirdStatFromCameraReply_BirdStat)(nil),     // 9: biz.bird_ai_srv.bird.ListBirdStatFromCameraReply.BirdStat
	(*page.PageQuery)(nil),                           // 10: page.PageQuery
	(*page.PageInfo)(nil),                            // 11: page.PageInfo
}
var file_bird_ai_srv_bird_bird_stat_proto_depIdxs = []int32{
	10, // 0: biz.bird_ai_srv.bird.ListBirdStatFromVoicePrintRequest.page:type_name -> page.PageQuery
	11, // 1: biz.bird_ai_srv.bird.ListBirdStatFromVoicePrintReply.page_info:type_name -> page.PageInfo
	8,  // 2: biz.bird_ai_srv.bird.ListBirdStatFromVoicePrintReply.list:type_name -> biz.bird_ai_srv.bird.ListBirdStatFromVoicePrintReply.BirdStat
	10, // 3: biz.bird_ai_srv.bird.ListBirdStatFromCameraRequest.page:type_name -> page.PageQuery
	11, // 4: biz.bird_ai_srv.bird.ListBirdStatFromCameraReply.page_info:type_name -> page.PageInfo
	9,  // 5: biz.bird_ai_srv.bird.ListBirdStatFromCameraReply.list:type_name -> biz.bird_ai_srv.bird.ListBirdStatFromCameraReply.BirdStat
	4,  // 6: biz.bird_ai_srv.bird.BirdStat.DeleteBirdStat:input_type -> biz.bird_ai_srv.bird.DeleteBirdStatRequest
	2,  // 7: biz.bird_ai_srv.bird.BirdStat.ListBirdStatFromCamera:input_type -> biz.bird_ai_srv.bird.ListBirdStatFromCameraRequest
	0,  // 8: biz.bird_ai_srv.bird.BirdStat.ListBirdStatFromVoicePrint:input_type -> biz.bird_ai_srv.bird.ListBirdStatFromVoicePrintRequest
	5,  // 9: biz.bird_ai_srv.bird.BirdStat.DeleteBirdStat:output_type -> biz.bird_ai_srv.bird.DeleteBirdStatReply
	3,  // 10: biz.bird_ai_srv.bird.BirdStat.ListBirdStatFromCamera:output_type -> biz.bird_ai_srv.bird.ListBirdStatFromCameraReply
	1,  // 11: biz.bird_ai_srv.bird.BirdStat.ListBirdStatFromVoicePrint:output_type -> biz.bird_ai_srv.bird.ListBirdStatFromVoicePrintReply
	9,  // [9:12] is the sub-list for method output_type
	6,  // [6:9] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_bird_ai_srv_bird_bird_stat_proto_init() }
func file_bird_ai_srv_bird_bird_stat_proto_init() {
	if File_bird_ai_srv_bird_bird_stat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bird_ai_srv_bird_bird_stat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBirdStatFromVoicePrintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_ai_srv_bird_bird_stat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBirdStatFromVoicePrintReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_ai_srv_bird_bird_stat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBirdStatFromCameraRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_ai_srv_bird_bird_stat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBirdStatFromCameraReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_ai_srv_bird_bird_stat_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBirdStatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_ai_srv_bird_bird_stat_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBirdStatReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_ai_srv_bird_bird_stat_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBirdStatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_ai_srv_bird_bird_stat_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBirdStatReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_ai_srv_bird_bird_stat_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBirdStatFromVoicePrintReply_BirdStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_ai_srv_bird_bird_stat_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBirdStatFromCameraReply_BirdStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bird_ai_srv_bird_bird_stat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bird_ai_srv_bird_bird_stat_proto_goTypes,
		DependencyIndexes: file_bird_ai_srv_bird_bird_stat_proto_depIdxs,
		MessageInfos:      file_bird_ai_srv_bird_bird_stat_proto_msgTypes,
	}.Build()
	File_bird_ai_srv_bird_bird_stat_proto = out.File
	file_bird_ai_srv_bird_bird_stat_proto_rawDesc = nil
	file_bird_ai_srv_bird_bird_stat_proto_goTypes = nil
	file_bird_ai_srv_bird_bird_stat_proto_depIdxs = nil
}
